<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.ohdsi</groupId>
  <artifactId>WebAPI</artifactId>
  <packaging>war</packaging>
  <version>2.3.1-SNAPSHOT</version>
  <name>WebAPI</name>
  <properties>
    <webapi.version>${project.version}</webapi.version>
    <webapi.build.number>SNAPSHOT</webapi.build.number>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jersey.version>2.14</jersey.version>
    <!-- Spring Boot manages spring.version as well -->
    <spring.boot.version>1.5.2.RELEASE</spring.boot.version>
    <spring.batch.version>3.0.8.RELEASE</spring.batch.version>
    <flyway.version>3.1</flyway.version>
    <waffle.version>1.7.3</waffle.version>
    <arachne.version>1.12.0-SNAPSHOT</arachne.version>
    <jersey-media-multipart.version>2.25.1</jersey-media-multipart.version>
    <start-class>org.ohdsi.webapi.WebApi</start-class>

    <dockerImagePrefix>hub.arachnenetwork.com</dockerImagePrefix>
    <!-- Primary DataSource -->
    <!-- default sql server - TODO How about making postgres the default (e.g. in line with open source tech)? -alexfranken -->
<!--
    <datasource.driverClassName>com.microsoft.sqlserver.jdbc.SQLServerDriver</datasource.driverClassName>
    <datasource.url>jdbc:sqlserver://serverName;databaseName=databaseName</datasource.url>
    <datasource.username>user</datasource.username>
    <datasource.password>password</datasource.password>
-->
    <!--<datasource.validationQuery>SELECT 1</datasource.validationQuery>-->
    <datasource.dialect>sql server</datasource.dialect>
    <datasource.ohdsi.schema>dbo</datasource.ohdsi.schema>
    <datasource.dialect.source>sql server</datasource.dialect.source>
    <!-- DB Change Management / Migration -->
<!--
    <flyway.datasource.driverClassName>com.microsoft.sqlserver.jdbc.SQLServerDriver</flyway.datasource.driverClassName>
    <flyway.datasource.url>jdbc:sqlserver://serverName</flyway.datasource.url>
    <flyway.datasource.username>userWithWritePrivs</flyway.datasource.username>
    <flyway.datasource.password>password</flyway.datasource.password>
    <flyway.locations>classpath:db/migration/sqlserver</flyway.locations>
-->
    <!-- Note: Schema name is case-sensitive. -->
    <flyway.schemas>${datasource.ohdsi.schema}</flyway.schemas>
    <flyway.validateOnMigrate>false</flyway.validateOnMigrate>
    <flyway.placeholders.ohdsiSchema>${datasource.ohdsi.schema}</flyway.placeholders.ohdsiSchema>
    <!-- CDM properties -->
    <source.name>CDM_NAME</source.name>
    <cdm.version>5</cdm.version>

    <spring.batch.repository.tableprefix>${datasource.ohdsi.schema}.BATCH_</spring.batch.repository.tableprefix>
    <spring.batch.repository.isolationLevelForCreate>ISOLATION_READ_COMMITTED</spring.batch.repository.isolationLevelForCreate>
    <spring.profiles.active>default</spring.profiles.active>

    <security.enabled>false</security.enabled>
    <security.cors.enabled>true</security.cors.enabled>
    <security.token.expiration>43200</security.token.expiration>
    <security.origin>http://localhost</security.origin>
    <security.ssl.enabled>false</security.ssl.enabled>
    <security.oauth.callback.ui>http://localhost/Atlas/#/welcome</security.oauth.callback.ui>
    <security.oauth.callback.api>http://localhost:8080/WebAPI/user/oauth/callback</security.oauth.callback.api>
    <security.oauth.google.apiKey></security.oauth.google.apiKey>
    <security.oauth.google.apiSecret></security.oauth.google.apiSecret>
    <security.oauth.facebook.apiKey></security.oauth.facebook.apiKey>
    <security.oauth.facebook.apiSecret></security.oauth.facebook.apiSecret>
    <security.oid.clientId></security.oid.clientId>
    <security.oid.apiSecret></security.oid.apiSecret>
    <security.oid.url></security.oid.url>
    <security.oid.redirectUrl>http://localhost/index.html#/welcome/</security.oid.redirectUrl>
    <security.kerberos.spn></security.kerberos.spn>
    <security.kerberos.keytabPath></security.kerberos.keytabPath>
    <security.ldap.dn>cn={0},dc=example,dc=org</security.ldap.dn>
    <security.ldap.url>ldap://localhost:389</security.ldap.url>
    <security.ad.url>ldap://localhost:389</security.ad.url>
    <security.ad.searchBase>CN=Users,DC=example,DC=org</security.ad.searchBase>
    <security.ad.principalSuffix>@example.org</security.ad.principalSuffix>
    <security.ad.system.username></security.ad.system.username>
    <security.ad.system.password></security.ad.system.password>
    <security.db.datasource.schema>public</security.db.datasource.schema>
    <security.cors.enabled>true</security.cors.enabled>
    <security.maxLoginAttempts>3</security.maxLoginAttempts>
    <security.duration.initial>10</security.duration.initial>
    <security.duration.increment>10</security.duration.increment>

    <!-- EMBEDDED SERVER CONFIGURATION (ServerProperties) -->
    <server.port>8080</server.port>
    <server.ssl.key-store></server.ssl.key-store>
    <server.ssl.key-store-password></server.ssl.key-store-password>
    <server.ssl.key-password></server.ssl.key-password>

    <impala.enabled>false</impala.enabled>
    <!-- max age in hours -->
    <execution.invalidation.maxage>4</execution.invalidation.maxage>
    <execution.invalidation.period>10000</execution.invalidation.period>
    <security.token.cookies.allowedList>/conceptset/exportlist</security.token.cookies.allowedList>
  </properties>
  <scm>
    <developerConnection>scm:git:https://github.com/odysseusinc/Atlas.git</developerConnection>
  </scm>
  <build>
    <finalName>WebAPI</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.properties</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*.*</include>
        </includes>
        <excludes>
          <exclude>**/*.properties</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.properties</include>
        </includes>
      </resource>
      <resource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*.*</include>
        </includes>
        <excludes>
          <exclude>**/*.properties</exclude>
        </excludes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring.boot.version}</version>
        <!-- executable-war via 'java -jar WebAPI-exec.war' currently fails with Jersey FileNotFound exception. TODO -->
        <configuration>
          <!-- Since we filter properties files via Maven, do not add resources. -->
          <addResources>false</addResources>
          <!-- executable-jar
          <classifier>exec</classifier>
          -->
        </configuration>
        <!-- executable-jar
        <executions>
            <execution>
                <goals>
                    <goal>repackage</goal>
                </goals>
            </execution>
        </executions>
        -->
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.18.1</version>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.5.1</version>
        <inherited>true</inherited>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>

      <!-- AtlasUI packaging -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.0.2</version>
          <configuration>
            <encoding>UTF-8</encoding>
            <escapeString>\</escapeString>
          </configuration>
        </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-scm-plugin</artifactId>
        <version>1.9.5</version>
        <configuration>
          <connectionType>developerConnection</connectionType>
          <scmVersion>${frontendBranch}</scmVersion>
          <scmVersionType>branch</scmVersionType>
          <checkoutDirectory>target/atlas</checkoutDirectory>
        </configuration>
        <executions>
          <execution>
            <id>checkout</id>
            <phase>process-resources</phase>
            <goals>
              <goal>checkout</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <finalName>atlasui</finalName>
          <descriptors>
            <descriptor>src/main/assembly/assembly.xml</descriptor>
          </descriptors>
          <appendAssemblyId>false</appendAssemblyId>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Docker image build -->

      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>1.0.0</version>
        <configuration>
          <imageName>${dockerImagePrefix}/atlas</imageName>
          <imageTags>
            <imageTag>${project.version}</imageTag>
            <imageTag>latest${latestSuffix}</imageTag>
          </imageTags>
          <dockerDirectory>src/main/docker</dockerDirectory>
          <resources>
            <resource>
              <directory>${project.build.directory}</directory>
              <include>${project.build.finalName}.${project.packaging}</include>
            </resource>
            <resource>
              <directory>${project.build.directory}</directory>
              <include>atlasui.zip</include>
            </resource>
          </resources>
          <serverId>arachne-hub</serverId>
          <registryUrl>https://hub.arachnenetwork.com/v2/</registryUrl>
        </configuration>
        <executions>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>build</goal>
              <goal>push</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.18.1</version>
        <configuration>
          <includes>
            <include>**/*IT.java</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <id>failsafe-integration-tests</id>
            <phase>integration-test</phase>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.qmino</groupId>
        <artifactId>miredot-plugin</artifactId>
        <version>1.5.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>restdoc</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
           <licence>cHJvamVjdHxvcmcub2hkc2kuV2ViQVBJfDIwMjAtMDMtMzF8dHJ1ZXwtMSNNQzBDRkNNQ2R2ZEhjbDg0Z2tONVI3bHlmQ2Y4SnNkYUFoVUFoMkdtOUVFdy9RelpLVzM1V2p6a2FsdzJZV009</licence>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>central</id>
      <name>Central Repository</name>
      <url>http://repo.maven.apache.org/maven2/ </url>
    </repository>
    <repository>
      <id>redhat.ga</id>
      <name>Redhat GA</name>
      <url>https://maven.repository.redhat.com/ga/</url>
    </repository>
    <repository>
      <id>ohdsi</id>
      <name>repo.ohdsi.org</name>
      <url>http://repo.ohdsi.org:8085/nexus/content/repositories/releases</url>
    </repository>
    <repository>
      <id>ohdsi.thirdparty</id>
      <name>repo.ohdsi.org</name>
      <url>http://repo.ohdsi.org:8085/nexus/content/repositories/thirdparty</url>
    </repository>
    <repository>
      <id>ohdsi.snapshots</id>
      <name>repo.ohdsi.org-snapshots</name>
      <url>http://repo.ohdsi.org:8085/nexus/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>springsource.releases</id>
      <name>SpringSource GA Repository</name>
      <url>http://repo.springsource.org/release</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>redshift</id>
      <url>http://redshift-maven-repository.s3-website-us-east-1.amazonaws.com/release</url>
    </repository>
    <repository>
      <id>odysseus.community.snapshots</id>
      <name>Odysseus community snapshots</name>
      <releases>
        <enabled>false</enabled>
        <updatePolicy>always</updatePolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
      <url>http://repo.odysseusinc.com/artifactory/community-libs-snapshot-local</url>
    </repository>
    <repository>
      <id>odysseus.community.releases</id>
      <name>Odysseus community releases</name>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
      <url>http://repo.odysseusinc.com/artifactory/community-libs-release-local</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>miredot</id>
      <name>MireDot Releases</name>
      <url>http://nexus.qmino.com/content/repositories/miredot</url>
    </pluginRepository>
    <pluginRepository>
      <id>central</id>
      <name>plugins</name>
      <url>http://repo.maven.apache.org/maven2</url>
    </pluginRepository>

  </pluginRepositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <!-- Import dependency management from Spring Boot -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.amazon.redshift</groupId>
        <artifactId>redshift-jdbc4-no-awssdk</artifactId>
        <version>1.2.10.1009</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-actuator</artifactId>
    <version>${spring.boot.version}</version> </dependency> -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
      <version>${spring.boot.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>${spring.boot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
      <version>${spring.boot.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.batch</groupId>
      <artifactId>spring-batch-core</artifactId>
      <version>${spring.batch.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
      <version>${spring.boot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jersey</artifactId>
      <version>${spring.boot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
      <version>${spring.boot.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.ohdsi.sql</groupId>
      <artifactId>SqlRender</artifactId>
      <version>1.4.8</version>
    </dependency>
    <dependency>
      <groupId>commons-dbutils</groupId>
      <artifactId>commons-dbutils</artifactId>
      <version>1.6</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.4.0.redhat-1</version>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.security</groupId>
      <artifactId>xml-security-impl</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <version>${spring.boot.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.3.2</version>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.3.3</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.santuario</groupId>
      <artifactId>xmlsec</artifactId>
      <version>1.4.8</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.8.9.redhat-1</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17.redhat-1</version>
    </dependency>
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>1.4.7-redhat-1</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
      <version>4.3.5.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>com.nimbusds</groupId>
      <artifactId>nimbus-jose-jwt</artifactId>
      <version>4.36.1</version>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
      <version>${flyway.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.2.redhat-1</version>
    </dependency>
    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <version>3.1</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.batch</groupId>
      <artifactId>spring-batch-admin-manager</artifactId>
      <version>2.0.0.M1</version>
      <exclusions>
        <exclusion>
          <artifactId>freemarker</artifactId>
          <groupId>org.freemarker</groupId>
        </exclusion>
        <exclusion>
          <artifactId>commons-dbcp</artifactId>
          <groupId>commons-dbcp</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>9.4-1201-jdbc41</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>com.microsoft.sqlserver</groupId>
      <artifactId>mssql-jdbc</artifactId>
      <version>6.2.2.jre8</version>
      <exclusions>
        <exclusion>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-client</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>3.7</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.eclipse.collections</groupId>
      <artifactId>eclipse-collections-api</artifactId>
      <version>8.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.collections</groupId>
      <artifactId>eclipse-collections</artifactId>
      <version>8.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>4.1</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-core</artifactId>
      <version>1.2.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-web</artifactId>
      <version>1.2.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-spring</artifactId>
      <version>1.2.5</version>
    </dependency>
    <dependency>
      <groupId>com.github.dblock.waffle</groupId>
      <artifactId>waffle-shiro</artifactId>
      <version>1.7.4</version>
    </dependency>
    <dependency>
      <groupId>com.github.dblock.waffle</groupId>
      <artifactId>waffle-jna</artifactId>
      <version>${waffle.version}</version>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt</artifactId>
      <version>0.6.0</version>
    </dependency>
    <dependency>
      <groupId>io.buji</groupId>
      <artifactId>buji-pac4j</artifactId>
      <version>2.0.2</version>
    </dependency>
    <dependency>
      <groupId>org.pac4j</groupId>
      <artifactId>pac4j-oauth</artifactId>
      <version>1.9.2</version>
      <exclusions>
        <exclusion>
          <groupId>javax.ws.rs</groupId>
          <artifactId>jsr311-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.pac4j</groupId>
      <artifactId>pac4j-oidc</artifactId>
      <version>1.9.2</version>
    </dependency>
    <dependency>
      <groupId>org.ohdsi</groupId>
      <artifactId>circe</artifactId>
      <version>1.4.0</version>
    </dependency>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20170516</version>
    </dependency>
    <dependency>
      <groupId>org.ohdsi</groupId>
      <artifactId>featureExtraction</artifactId>
      <version>2.0.2-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.amazon.redshift</groupId>
      <artifactId>redshift-jdbc4-no-awssdk</artifactId>
    </dependency>
    <dependency>
      <groupId>com.odysseusinc.arachne</groupId>
      <artifactId>execution-engine-commons</artifactId>
      <version>${arachne.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
      <version>${jersey-media-multipart.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-crypto</artifactId>
      <version>4.2.4.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>2.7.2</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
      <exclusions>
        <exclusion>
          <groupId>com.vaadin.external.google</groupId>
          <artifactId>android-json</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <profiles>
    <profile>
      <id>dev</id>
      <properties>
        <env>dev</env>
        <latestSuffix>-dev</latestSuffix>
        <frontendBranch>master</frontendBranch>
      </properties>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>
    <profile>
      <id>qa</id>
      <properties>
        <env>qa</env>
        <latestSuffix>-qa</latestSuffix>
        <frontendBranch>qa</frontendBranch>
      </properties>
    </profile>
    <profile>
      <id>prod</id>
      <properties>
        <env>prod</env>
        <latestSuffix>-prod</latestSuffix>
        <frontendBranch>master</frontendBranch>
      </properties>
    </profile>
    <profile>
      <id>webapi-oracle</id>
      <properties>
        <datasource.driverClassName>oracle.jdbc.OracleDriver</datasource.driverClassName>
        <datasource.url>jdbc:oracle:thin:@127.0.0.1:1521/ohdsi</datasource.url>
        <datasource.username>user</datasource.username>
        <datasource.password>password</datasource.password>
        <datasource.dialect>oracle</datasource.dialect>
        <datasource.ohdsi.schema>OHDSI</datasource.ohdsi.schema>
        <!--<datasource.validationQuery>SELECT 1 FROM DUAL</datasource.validationQuery>-->
        <flyway.locations>classpath:db/migration/oracle</flyway.locations>
        <hibernate.dialect>org.hibernate.dialect.Oracle10gDialect</hibernate.dialect>
      </properties>
      <dependencies>
        <dependency>
          <groupId>oracle</groupId>
          <artifactId>ojdbc6</artifactId>
          <version>11.2.0.3</version>
          <!-- If you have it local and not in a repository <systemPath></systemPath> -->
        </dependency>
      </dependencies>
        <repositories>
            <repository>
                <id>datanucleus</id>
                <name>datanucleus</name>
                <url>http://www.datanucleus.org/downloads/maven2/</url>
            </repository>
        </repositories>
    </profile>
    <profile>
      <id>webapi-netezza</id>
      <properties>
        <netezza.enabled>true</netezza.enabled>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.netezza</groupId>
          <artifactId>nzjdbc</artifactId>
          <version>1.0</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-install-plugin</artifactId>
            <version>2.5.2</version>
            <executions>
              <execution>
                <id>netezza-jdbc</id>
                <phase>initialize</phase>
                <goals>
                  <goal>install-file</goal>
                </goals>
                <configuration>
                  <groupId>org.netezza</groupId>
                  <artifactId>nzjdbc</artifactId>
                  <version>1.0</version>
                  <packaging>jar</packaging>
                  <file>${basedir}/src/main/extras/netezza/nzjdbc.jar</file>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>webapi-impala</id>
      <properties>
        <impala.enabled>true</impala.enabled>
      </properties>
      <dependencies>
        <dependency>
          <groupId>hive</groupId>
          <artifactId>hive_metastore</artifactId>
          <version>1.0.0</version>
        </dependency>
        <dependency>
          <groupId>hive</groupId>
          <artifactId>hive_service</artifactId>
          <version>1.0.0</version>
        </dependency>
        <dependency>
          <groupId>com.cloudera</groupId>
          <artifactId>ImpalaJDBC41</artifactId>
          <version>2.5.42</version>
        </dependency>
        <dependency>
          <groupId>libfb</groupId>
          <artifactId>libfb303</artifactId>
          <version>0.9.0</version>
        </dependency>
        <dependency>
          <groupId>libthrift</groupId>
          <artifactId>libthrift</artifactId>
          <version>0.9.0</version>
        </dependency>
        <dependency>
          <groupId>ql</groupId>
          <artifactId>ql</artifactId>
          <version>1.0.0</version>
        </dependency>
        <dependency>
          <groupId>TCLI</groupId>
          <artifactId>TCLI</artifactId>
          <version>1.0.0</version>
        </dependency>
        <dependency>
          <groupId>org.apache.zookeeper</groupId>
          <artifactId>zookeeper</artifactId>
          <version>3.4.6</version>
          <type>pom</type>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-install-plugin</artifactId>
            <version>2.5.2</version>
            <executions>
              <execution>
                  <id>impala-jdbc</id>
                <phase>initialize</phase>
                <goals>
                  <goal>install-file</goal>
                </goals>
                <configuration>
                    <groupId>com.cloudera</groupId>
                    <artifactId>ImpalaJDBC41</artifactId>
                    <version>2.5.41</version>
                    <packaging>jar</packaging>
                    <file>${basedir}/src/main/extras/impala/ImpalaJDBC41.jar</file>
                </configuration>
              </execution>
                <execution>
                    <id>hive_metastore</id>
                    <phase>initialize</phase>
                    <goals>
                        <goal>install-file</goal>
                    </goals>
                    <configuration>
                        <groupId>hive</groupId>
                        <artifactId>hive_metastore</artifactId>
                        <version>1.0.0</version>
                        <packaging>jar</packaging>
                        <file>${basedir}/src/main/extras/impala/hive_metastore.jar</file>
                    </configuration>
                </execution>
                <execution>
                    <id>hive_service</id>
                    <phase>initialize</phase>
                    <goals>
                        <goal>install-file</goal>
                    </goals>
                    <configuration>
                        <groupId>hive</groupId>
                        <artifactId>hive_service</artifactId>
                        <version>1.0.0</version>
                        <packaging>jar</packaging>
                        <file>${basedir}/src/main/extras/impala/hive_service.jar</file>
                    </configuration>
                </execution>
                <execution>
                    <id>libfb</id>
                    <phase>initialize</phase>
                    <goals>
                        <goal>install-file</goal>
                    </goals>
                    <configuration>
                        <groupId>libfb</groupId>
                        <artifactId>libfb303</artifactId>
                        <version>0.9.0</version>
                        <packaging>jar</packaging>
                        <file>${basedir}/src/main/extras/impala/libfb303-0.9.0.jar</file>
                    </configuration>
                </execution>
                <execution>
                    <id>libthrift</id>
                    <phase>initialize</phase>
                    <goals>
                        <goal>install-file</goal>
                    </goals>
                    <configuration>
                        <groupId>libthrift</groupId>
                        <artifactId>libthrift</artifactId>
                        <version>0.9.0</version>
                        <packaging>jar</packaging>
                        <file>${basedir}/src/main/extras/impala/libthrift-0.9.0.jar</file>
                    </configuration>
                </execution>
                <execution>
                    <id>ql</id>
                    <phase>initialize</phase>
                    <goals>
                        <goal>install-file</goal>
                    </goals>
                    <configuration>
                        <groupId>ql</groupId>
                        <artifactId>ql</artifactId>
                        <version>1.0.0</version>
                        <packaging>jar</packaging>
                        <file>${basedir}/src/main/extras/impala/ql.jar</file>
                    </configuration>
                </execution>
                <execution>
                    <id>TCLI</id>
                    <phase>initialize</phase>
                    <goals>
                        <goal>install-file</goal>
                    </goals>
                    <configuration>
                        <groupId>TCLI</groupId>
                        <artifactId>TCLI</artifactId>
                        <version>1.0.0</version>
                        <packaging>jar</packaging>
                        <file>${basedir}/src/main/extras/impala/TCLIServiceClient.jar</file>
                    </configuration>
                </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>webapi-postgresql</id>
      <properties>
        <datasource.driverClassName>org.postgresql.Driver</datasource.driverClassName>
        <datasource.url>jdbc:postgresql://54.209.111.128:5432/vocabularyv5</datasource.url>
        <datasource.username>USER</datasource.username>
        <datasource.password>PASS</datasource.password>
        <datasource.dialect>postgresql</datasource.dialect>
        <datasource.ohdsi.schema>webapi</datasource.ohdsi.schema>
        <flyway.locations>classpath:db/migration/postgresql</flyway.locations>
        <spring.batch.repository.tableprefix>${datasource.ohdsi.schema}.BATCH_</spring.batch.repository.tableprefix>
        <hibernate.dialect>org.hibernate.dialect.PostgreSQL9Dialect</hibernate.dialect>
        <executionengine.url>https://localhost:8888/api/v1/analyze</executionengine.url>
        <executionengine.token>Basic YWRtaW5Ab2R5c3NldXNpbmMuY29tOnBhc3N3b3Jk</executionengine.token>
        <executionengine.update_status_callback>http://localhost:8080/WebAPI\
          /execution_service_callbacks/submission/{id}/status_update/{password}</executionengine.update_status_callback>
        <executionengine.result_callback>http://localhost:8080/WebAPI\
          /execution_service_callbacks/submission/{id}/result/{password}</executionengine.result_callback>
        <security.enabled>true</security.enabled>
        <security.db.datasource.authenticationQuery>select password from ${security.db.datasource.schema}.users where \
          email = ?</security.db.datasource.authenticationQuery>
        <security.db.datasource.schema>public</security.db.datasource.schema>
      </properties>
    </profile>
    <profile>
      <id>webapi-mssql</id>
      <properties>
        <datasource.driverClassName>com.microsoft.sqlserver.jdbc.SQLServerDriver</datasource.driverClassName>
        <datasource.url>jdbc:sqlserver://server</datasource.url>
        <datasource.username>USER</datasource.username>
        <datasource.password>PASS</datasource.password>
        <datasource.dialect>sql server</datasource.dialect>
        <datasource.ohdsi.schema>OHDSI_schema</datasource.ohdsi.schema>
        <flyway.locations>classpath:db/migration/sqlserver</flyway.locations>
        <hibernate.dialect>org.hibernate.dialect.SQLServer2012Dialect</hibernate.dialect>
      </properties>
    </profile>
    <profile>
      <id>test</id>
      <properties>
        <packaging.excludes></packaging.excludes>
        <datasource.jndi-name>java:/comp/env/jdbc/webapi</datasource.jndi-name>
        <datasource.driverClassName>org.postgresql.Driver</datasource.driverClassName>
        <datasource.url>jdbc:postgresql://localhost:5432/atlas_test</datasource.url>
        <datasource.username>ohdsi</datasource.username>
        <datasource.password>ohdsi</datasource.password>
        <datasource.dialect>postgresql</datasource.dialect>
        <datasource.ohdsi.schema>ohdsi</datasource.ohdsi.schema>
        <hibernate.dialect>org.hibernate.dialect.PostgreSQL9Dialect</hibernate.dialect>
        <flyway.locations>classpath:db/migration/postgresql</flyway.locations>
        <use.single.connect.datasource.for.testing>true</use.single.connect.datasource.for.testing>
      </properties>
    </profile>
    <profile>
      <id>develop</id>
      <properties>
        <packaging.excludes></packaging.excludes>
        <security.enabled>true</security.enabled>
        <datasource.jndi-name>java:/comp/env/jdbc/webapi</datasource.jndi-name>
        <datasource.driverClassName>org.postgresql.Driver</datasource.driverClassName>
        <datasource.url>jdbc:postgresql://localhost:5432/webapi</datasource.url>
        <datasource.username>ohdsi</datasource.username>
        <datasource.password>ohdsi</datasource.password>
        <datasource.dialect>postgresql</datasource.dialect>
        <datasource.ohdsi.schema>webapi</datasource.ohdsi.schema>
        <hibernate.dialect>org.hibernate.dialect.PostgreSQL9Dialect</hibernate.dialect>
        <flyway.locations>classpath:db/migration/postgresql</flyway.locations>
        <use.single.connect.datasource.for.testing>true</use.single.connect.datasource.for.testing>
        <executionengine.url>https://localhost:8888/api/v1/analyze</executionengine.url>
        <executionengine.token></executionengine.token>
        <executionengine.update_status_callback>http://localhost:8089/WebAPI\
          /execution_service_callbacks/submission/{id}/status_update/{password}</executionengine.update_status_callback>
        <executionengine.result_callback>http://localhost:8089/WebAPI\
          /execution_service_callbacks/submission/{id}/result/{password}</executionengine.result_callback>
        <security.db.datasource.authenticationQuery>select password from ${security.db.datasource.schema}.users where \
          email = ?</security.db.datasource.authenticationQuery>
      </properties>
    </profile>
  </profiles>
</project>

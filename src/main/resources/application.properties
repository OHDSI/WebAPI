#WebAPI Version
webapi.version=${webapi.version}

spring.profiles.active=${spring.profiles.active}

# Logging
logging.level.org.springframework.web: OFF
logging.level.org.hibernate: OFF
logging.level.org.apache.shiro=TRACE

#Primary DataSource
datasource.driverClassName=${datasource.driverClassName}
datasource.url=${datasource.url}
datasource.username=${datasource.username}
datasource.password=${datasource.password}
datasource.dialect=${datasource.dialect}
datasource.ohdsi.schema=${datasource.ohdsi.schema}
datasource.dialect.source=${datasource.dialect.source}

#CDM properties
source.name=${source.name}
cdm.version=${cdm.version}

#R Service Host
r.serviceHost=${r.serviceHost}

#Flyway database change management.
#DataSource for Change Managment / Migration
flyway.enabled=true
flyway.datasource.driverClassName=${datasource.driverClassName}
flyway.datasource.url=${datasource.url}
flyway.datasource.username=${flyway.datasource.username}
flyway.datasource.password=${flyway.datasource.password}
# check that migration scripts location exists
flyway.check-location=true
flyway.locations=${flyway.locations}
# locations of migrations scripts
# schemas to manage/update (e.g. ohdsi/results schema) -NOTE: CASE SENSITIVE!
flyway.schemas=${flyway.schemas}
#Baseline - start flyway managment with existing objects
flyway.baselineOnMigrate=true
#Due to issue https://github.com/flyway/flyway/issues/752 use default baselineVersion=1 (Note equality to 1.0.0.0, so scripts with that version will be omitted)
#flyway.baselineVersion=1.0.0.0
flyway.validateOnMigrate=${flyway.validateOnMigrate}
# Enable out of order migrations due to distributed development nature of WebAPI
flyway.outOfOrder=true
# Flyway Placeholders:
flyway.placeholders.ohdsiSchema=${flyway.placeholders.ohdsiSchema}

#Disable any auto init
#http://docs.spring.io/spring-boot/docs/current/reference/html/howto-database-initialization.html
spring.datasource.initialize=false
#JPA / Spring Data
spring.jpa.show-sql=${spring.jpa.show-sql}
# JPA Default Schema
spring.jpa.properties.hibernate.default_schema=${datasource.ohdsi.schema}
#JPA Dialect
spring.jpa.properties.hibernate.dialect=${hibernate.dialect}

#JAX-RS
jersey.resources.root.package=org.ohdsi.webapi

#Spring boot auto starts jobs upon application start
spring.batch.job.enabled=false
#Disable auto init of spring batch tables
spring.batch.initializer.enabled=false
#Custom properties
spring.batch.repository.tableprefix=${spring.batch.repository.tableprefix}
spring.batch.repository.isolationLevelForCreate=${spring.batch.repository.isolationLevelForCreate}
spring.batch.taskExecutor.corePoolSize=${spring.batch.taskExecutor.corePoolSize}
spring.batch.taskExecutor.maxPoolSize=${spring.batch.taskExecutor.maxPoolSize}

# EMBEDDED SERVER CONFIGURATION (ServerProperties)
server.port = ${server.port}
server.ssl.enabled = ${security.ssl.enabled}
server.ssl.key-store = ${server.ssl.key-store}
server.ssl.key-store-password = ${server.ssl.key-store-password}
server.ssl.key-password = ${server.ssl.key-password}
# the context path, defaults to '/'
server.context-path=/WebAPI

security.cas.loginUrl=${security.cas.loginUrl}
security.cas.callbackUrl=${security.cas.callbackUrl}
security.cas.serverUrl=${security.cas.serverUrl}
security.cas.cassvcs=${security.cas.cassvcs}
security.cas.casticket=${security.cas.casticket}

# Enabling Compression
compression=on
compressableMimeType=application/json,application/xml,text/html,text/xml,text/plain


#Disabled to support Basic Auth and RESTful interface
#http://docs.spring.io/spring-security/site/docs/3.2.x-SNAPSHOT/reference/html5/#when-to-use-csrf-protection
csrf.disable=true

sparql.endpoint=http://virtuoso.ohdsi.org:8890/sparql?default-graph-uri=&query=

security.provider=${security.provider}
security.cors.enabled=${security.cors.enabled}
security.token.expiration=${security.token.expiration}
security.origin=${security.origin}
security.ssl.enabled=${security.ssl.enabled}
security.oauth.callback.ui=${security.oauth.callback.ui}
security.oauth.callback.api=${security.oauth.callback.api}
security.oauth.google.apiKey=${security.oauth.google.apiKey}
security.oauth.google.apiSecret=${security.oauth.google.apiSecret}
security.oauth.facebook.apiKey=${security.oauth.facebook.apiKey}
security.oauth.facebook.apiSecret=${security.oauth.facebook.apiSecret}
security.oauth.github.apiKey=${security.oauth.github.apiKey}
security.oauth.github.apiSecret=${security.oauth.github.apiSecret}
security.oid.clientId=${security.oid.clientId}
security.oid.apiSecret=${security.oid.apiSecret}
security.oid.url=${security.oid.url}
security.oid.redirectUrl=${security.oid.redirectUrl}
security.db.datasource.driverClassName=${security.db.datasource.driverClassName}
security.db.datasource.url=${security.db.datasource.url}
security.db.datasource.username=${security.db.datasource.username}
security.db.datasource.password=${security.db.datasource.password}
security.db.datasource.schema=${security.db.datasource.schema}
security.db.datasource.authenticationQuery=${security.db.datasource.authenticationQuery}
security.ldap.dn=${security.ldap.dn}
security.ldap.url=${security.ldap.url}
security.ldap.baseDn=${security.ldap.baseDn}
security.ldap.system.username=${security.ldap.system.username}
security.ldap.system.password=${security.ldap.system.password}
security.ad.url=${security.ad.url}
security.ad.searchBase=${security.ad.searchBase}
security.ad.principalSuffix=${security.ad.principalSuffix}
security.ad.system.username=${security.ad.system.username}
security.ad.system.password=${security.ad.system.password}
security.ad.searchFilter=${security.ad.searchFilter}
security.ad.ignore.partial.result.exception=${security.ad.ignore.partial.result.exception}
security.ad.result.count.limit=${security.ad.result.count.limit}
security.ad.default.import.group=${security.ad.default.import.group}

security.googleIap.cloudProjectId=${ssecurity.googleIap.cloudProjectId}
security.googleIap.backendServiceId=${security.googleIap.backendServiceId}

security.maxLoginAttempts=${security.maxLoginAttempts}
security.duration.initial=${security.duration.initial}
security.duration.increment=${security.duration.increment}

#Execution engine
executionengine.updateStatusCallback=${executionengine.updateStatusCallback}
executionengine.resultCallback=${executionengine.resultCallback}
executionengine.url=${executionengine.url}
executionengine.token=${executionengine.token}
execution.invalidation.period=${execution.invalidation.period}
execution.status.period=${execution.status.period}

#Hikari
spring.datasource.hikari.connection-test-query=${spring.datasource.hikari.connection-test-query}
spring.datasource.hikari.connection-test-query-timeout=${spring.datasource.hikari.connection-test-query-timeout}
spring.datasource.hikari.maximum-pool-size=${spring.datasource.hikari.maximum-pool-size}
spring.datasource.hikari.minimum-idle=${spring.datasource.hikari.minimum-idle}

person.viewDates=${person.viewDates}

#Heracles settings
heracles.smallcellcount=${heracles.smallcellcount}

jasypt.encryptor.enabled=${jasypt.encryptor.enabled}
jasypt.encryptor.password=${jasypt.encryptor.password}
jasypt.encryptor.algorithm=${jasypt.encryptor.algorithm}

#Kerberos settings
kerberos.timeout=${kerberos.timeout}
kerberos.configPath=${kerberos.configPath}
kerberos.kinitPath=${kerberos.kinitPath}

#Organization Settings
organization.name=${organization.name}

#JdbcTemplate
jdbc.suppressInvalidApiException=${jdbc.suppressInvalidApiException}

#Sensitive info settings
sensitiveinfo.admin.role=${sensitiveinfo.admin.role}
sensitiveinfo.analysis.extensions=${sensitiveinfo.analysis.extensions}

hydra.externalPackage.estimation=${hydra.externalPackage.estimation}
hydra.externalPackage.prediction=${hydra.externalPackage.prediction}